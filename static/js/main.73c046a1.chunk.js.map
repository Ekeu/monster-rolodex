{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","toLowerCase","CardList","monsters","map","SearchBox","handleChange","placeholder","for","class","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAsBeA,EApBF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBACEA,UAAU,gDACVC,IAAG,+BAA0BF,EAAQG,GAAlC,gCACHC,IAAKJ,EAAQK,SAGjB,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,0CAAf,UACGD,EAAQK,KACT,mBAAGJ,UAAU,eAAb,SAA6BD,EAAQM,MAAMC,yBCAtCC,EAZE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,mCACGA,EAASC,KAAI,SAACV,GAAD,OACZ,6BACE,cAAC,EAAD,CAAMA,QAASA,KADRA,EAAQG,UCaVQ,EAlBG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACjC,OACE,qCACE,uBAAOC,IAAI,SAASC,MAAM,UAA1B,oBAGA,uBACEC,KAAK,SACLX,KAAMQ,EACNV,GAAG,SACHY,MAAM,uGACNF,YAAaA,EACbI,SAAUL,QCyCHM,E,kDAjDb,aAAe,IAAD,8BACZ,gBAaFN,aAAe,SAACO,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAZ1D,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEX,SAAUoB,S,oBAK/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bf,EADD,EACCA,SAAUY,EADX,EACWA,YACZU,EAAmBtB,EAASuB,QAAO,SAAChC,GAAD,OACvCA,EAAQK,KAAKE,cAAc0B,SAASZ,EAAYd,kBAElD,OACE,mCACE,qBAAKN,UAAU,WAAf,SACE,sBAAKA,UAAU,wDAAf,UACE,oBAAIc,MAAM,4FAAV,6BAGA,qBAAKA,MAAM,wCAAX,SACE,qBAAKA,MAAM,qBAAX,SACE,cAAC,EAAD,CACEF,YAAY,kBACZD,aAAckB,KAAKlB,mBAKzB,qBAAKX,UAAU,aAAf,SACE,oBAAIA,UAAU,kGAAd,SACE,cAAC,EAAD,CAAUQ,SAAUsB,mB,GAxClBG,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73c046a1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ monster }) => {\n  return (\n    <div className='space-y-4'>\n      <div className='aspect-w-3 aspect-h-2'>\n        <img\n          className='object-cover shadow-lg rounded-lg bg-gray-100'\n          src={`https://robohash.org/${monster.id}.png?set=set3&size=1024x1024`}\n          alt={monster.name}\n        />\n      </div>\n      <div className='space-y-2'>\n        <div className='text-lg leading-6 font-medium space-y-1'>\n          {monster.name}\n          <p className='text-red-800'>{monster.email.toLowerCase()}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card/Card';\n\nconst CardList = ({ monsters }) => {\n  return (\n    <>\n      {monsters.map((monster) => (\n        <li key={monster.id}>\n          <Card monster={monster}></Card>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ handleChange, placeholder }) => {\n  return (\n    <>\n      <label for='search' class='sr-only'>\n        Search\n      </label>\n      <input\n        type='search'\n        name={placeholder}\n        id='search'\n        class='shadow-sm focus:ring-red-800 focus:border-red-800 block w-full sm:text-sm border-gray-300 rounded-md'\n        placeholder={placeholder}\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from './components/CardList/CardList';\nimport SearchBox from './components/SearchBox/SearchBox';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange = (e) => this.setState({ searchField: e.target.value });\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <>\n        <div className='bg-white'>\n          <div className='mx-auto py-12 px-4 max-w-7xl sm:px-6 lg:px-8 lg:py-24'>\n            <h2 class='text-6xl text-center font-extrabold font-sedgwick text-red-800 tracking-tight sm:text-7xl'>\n              Monster Rolodex\n            </h2>\n            <div class='mt-8 sm:mx-auto sm:w-full sm:max-w-md'>\n              <div class='py-8 px-4 sm:px-10'>\n                <SearchBox\n                  placeholder='Search monsters'\n                  handleChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className='space-y-12'>\n              <ul className='space-y-12 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:gap-y-12 sm:space-y-0 lg:grid-cols-3 lg:gap-x-8'>\n                <CardList monsters={filteredMonsters} />\n              </ul>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}